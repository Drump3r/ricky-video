{"version":3,"sources":["ejercicios/typescript/index.ts"],"names":[],"mappings":"AAAA,SAAS,GAAT,CAAa,IAAb,EAA2B,IAA3B,EAAuC;AACnC,SAAO,IAAI,GAAG,IAAd;AACH;;AACD,IAAM,MAAM,GAAG,GAAG,CAAC,CAAD,EAAG,CAAH,CAAlB;AACA,OAAO,CAAC,GAAR,CAAY,MAAZ,GAEA;;AACA,IAAI,KAAK,GAAY,IAArB;AACA,KAAK,GAAG,KAAR,EAEA;;AACA,IAAI,GAAG,GAAG,CAAV;AACA,IAAI,SAAS,GAAW,EAAxB;AACA,IAAI,WAAW,GAAW,GAA1B;AACA,IAAI,SAAS,GAAG,SAAS,GAAG,WAA5B,EAEA;;AACA,IAAI,MAAM,GAAW,SAArB;AACA,IAAI,MAAM,GAAG,cAAY,MAAzB,EAEA;;AACA,IAAI,MAAM,GAAa,EAAvB;AACA,MAAM,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAAT;AAEA,IAAI,gBAAgB,GAA6B,EAAjD;AACA,gBAAgB,CAAC,IAAjB,CAAsB,SAAtB;AACA,gBAAgB,CAAC,IAAjB,CAAsB,IAAtB,GAEA;;AAEA,IAAK,KAAL;;AAAA,CAAA,UAAK,KAAL,EAAU;AACN,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,KAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACH,CAJD,EAAK,KAAK,KAAL,KAAK,GAAA,EAAA,CAAV;;AAKA,IAAI,aAAa,GAAU,KAAK,CAAC,IAAjC,EAEA;;AACA,IAAI,OAAO,GAAQ,OAAnB;AACA,OAAO,GAAG;AAAC,EAAA,IAAI,EAAE;AAAP,CAAV,EAEA;;AACA,IAAI,UAAU,GAAW;AAAC,EAAA,IAAI,EAAE;AAAP,CAAzB,EAEA;;AACA,SAAS,GAAT,CAAa,CAAb,EAAuB,CAAvB,EAA+B;AAC3B,SAAO,CAAC,GAAG,CAAX;AACH;;AACD,IAAM,IAAI,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAhB;;AAEA,SAAS,WAAT,CAAqB,CAArB,EAA6B;AACzB,SAAO,UAAU,CAAV,EAAkB;AACrB,WAAO,CAAC,GAAG,CAAX;AACH,GAFD;AAGH;;AAED,IAAM,OAAO,GAAG,WAAW,CAAC,CAAD,CAA3B;AACA,IAAM,SAAS,GAAG,OAAO,CAAC,CAAD,CAAzB;;AAEA,SAAS,QAAT,CAAkB,SAAlB,EAAoC,QAApC,EAAoD;AAChD,SAAU,SAAS,GAAA,GAAT,GAAa,QAAvB;AACH;;AASD,IAAI,IAAI,GAAe;AACnB,EAAA,KAAK,EAAE,CADY;AAEnB,EAAA,IAAI,EAAE,CAFa;AAGnB,EAAA,KAAK,EAAE,KAAK,CAAC;AAHM,CAAvB;;AAKA,SAAS,IAAT,CAAc,CAAd,EAA0B;AACtB,SAAO,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,KAAlB;AACH;;AAED,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAD,CAArB;AACA,OAAO,CAAC,GAAR,CAAY,QAAZ;;AAEA,IAAI,CAAC,QAAL,GAAgB,YAAA;AACZ,SAAO,KAAK,KAAL,GAAa,mBAAiB,KAAK,KAAnC,GAA6C,eAApD;AACH,CAFD;;AAGA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,QAAjB","file":"typescript.72c601f0.js","sourceRoot":"..","sourcesContent":["function sum(num1: number, num2: number){\r\n    return num1 + num2\r\n}\r\nconst result = sum(5,6)\r\nconsole.log(result)\r\n\r\n// Boolean\r\nlet muted: boolean = true\r\nmuted = false\r\n\r\n// NÃºmeros\r\nlet age = 6\r\nlet numerador: number = 42\r\nlet denominador: number = age\r\nlet resultado = numerador / denominador\r\n\r\n// String\r\nlet nombre: string = 'Richard'\r\nlet saludo = `Me llamo ${nombre}`\r\n\r\n// Arreglos\r\nlet people: string[] = []\r\npeople = ['Isabel', 'Nicole', 'Raul']\r\n\r\nlet peopleAndNumbers: Array< string | number > = []\r\npeopleAndNumbers.push('Ricardo')\r\npeopleAndNumbers.push(9001)\r\n\r\n// Enum\r\n\r\nenum Color {\r\n    Rojo = \"Rojo\",\r\n    Verde = \"Verde\",\r\n    Azul = \"Azul\"\r\n}\r\nlet colorFavorito: Color = Color.Rojo\r\n\r\n// Any\r\nlet comodin: any = 'Joker'\r\ncomodin = {type: 'Wildcard'}\r\n\r\n// Object\r\nlet someObject: object = {type: 'Wildcard'}\r\n\r\n//Funciones \r\nfunction add(a:number, b:number) : number {\r\n    return a + b\r\n}\r\nconst sumF = add(4, 6)\r\n\r\nfunction createAdder(a:number): (number) => number {\r\n    return function (b:number) {\r\n        return b + a\r\n    }\r\n}\r\n\r\nconst addFour = createAdder(4)\r\nconst fourPlus6 = addFour(6)\r\n\r\nfunction fullName(firstName:string, lastName?:string): string {\r\n    return `${firstName} ${lastName}`\r\n}\r\n\r\n// Interfaces\r\ninterface Rectangulo {\r\n    ancho: number\r\n    alto: number\r\n    color?: Color\r\n}\r\n\r\nlet rect: Rectangulo = {\r\n    ancho: 4,\r\n    alto: 6,\r\n    color: Color.Azul\r\n}\r\nfunction area(r:Rectangulo) {\r\n    return r.alto * r.ancho\r\n}\r\n\r\nconst areaRect = area(rect)\r\nconsole.log(areaRect)\r\n\r\nrect.toString = function () {\r\n    return this.color ? `Un rectangulo ${this.color}` : 'Un rectangulo'\r\n}\r\nconsole.log(rect.toString)"]}