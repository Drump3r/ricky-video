{"version":3,"sources":["sw.js"],"names":["VERSION","self","addEventListener","event","waitUntil","precache","request","method","respondWith","cachedResponse","updateCache","caches","open","cache","addAll","match","response","fetch","status","put","Promise","resolve","reject"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAG,IAAhB;AACAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAAAC,KAAK,EAAI;AACtCA,EAAAA,KAAK,CAACC,SAAN,CAAgBC,QAAQ,EAAxB;AACH,CAFD;AAGAJ,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAAAC,KAAK,EAAI;AACpC,MAAMG,OAAO,GAAGH,KAAK,CAACG,OAAtB,CADoC,CAEpC;;AACA,MAAIA,OAAO,CAACC,MAAR,KAAmB,KAAvB,EAA8B;AAC1B;AACH,GALmC,CAMpC;;;AACAJ,EAAAA,KAAK,CAACK,WAAN,CAAkBC,cAAc,CAACH,OAAD,CAAhC,EAPoC,CAQpC;;AACAH,EAAAA,KAAK,CAACC,SAAN,CAAgBM,WAAW,CAACJ,OAAD,CAA3B;AACH,CAVD;;SAWeD;;;;;sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBM,MAAM,CAACC,IAAP,CAAYZ,OAAZ,CADxB;;AAAA;AACUa,YAAAA,KADV;AAAA,6CAEWA,KAAK,CAACC,MAAN,CAAa,CAChB,GADgB,EAEhB,aAFgB,EAGhB,kBAHgB,EAIhB,wBAJgB,EAKhB,6BALgB,EAMhB,8BANgB,EAOhB,YAPgB,EAQhB,0BARgB,CAAb,CAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAaeL;;;;;4EAAf,kBAA8BH,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBK,MAAM,CAACC,IAAP,CAAYZ,OAAZ,CADxB;;AAAA;AACUa,YAAAA,KADV;AAAA;AAAA,mBAE2BA,KAAK,CAACE,KAAN,CAAYT,OAAZ,CAF3B;;AAAA;AAEUU,YAAAA,QAFV;AAAA,8CAGWA,QAAQ,IAAIC,KAAK,CAACX,OAAD,CAH5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAKeI;;;;;yEAAf,kBAA2BJ,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBK,MAAM,CAACC,IAAP,CAAYZ,OAAZ,CADxB;;AAAA;AACUa,YAAAA,KADV;AAAA;AAAA,mBAE2BI,KAAK,CAACX,OAAD,CAFhC;;AAAA;AAEUU,YAAAA,QAFV;AAAA,8CAIWA,QAAQ,CAACE,MAAT,KAAoB,GAApB,GACDL,KAAK,CAACM,GAAN,CAAUb,OAAV,EAAmBU,QAAnB,CADC,GAED,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,qBAAqBD,OAAO,CAAC,IAAD,CAA5B;AAAA,aAAZ,CANV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"sw.js","sourceRoot":"..","sourcesContent":["const VERSION = 'v1'\r\nself.addEventListener('install', event => {\r\n    event.waitUntil(precache())\r\n})\r\nself.addEventListener('fetch', event => {\r\n    const request = event.request\r\n    //get\r\n    if (request.method !== 'GET') {\r\n        return\r\n    }\r\n    //buscar en cache\r\n    event.respondWith(cachedResponse(request))\r\n    // actualizar el cache\r\n    event.waitUntil(updateCache(request))\r\n})\r\nasync function precache() {\r\n    const cache = await caches.open(VERSION)\r\n    return cache.addAll([\r\n        '/',\r\n        '/index.html',\r\n        '/assets/index.js',\r\n        '/assets/MediaPlayer.js',\r\n        '/assets/plugins/AutoPlay.js',\r\n        '/assets/plugins/AutoPause.js',\r\n        '/index.css',\r\n        '/assets/BigBuckBunny.mp4',\r\n    ])\r\n}\r\nasync function cachedResponse(request) {\r\n    const cache = await caches.open(VERSION)\r\n    const response = await cache.match(request)\r\n    return response || fetch(request)\r\n}\r\nasync function updateCache(request) {\r\n    const cache = await caches.open(VERSION)\r\n    const response = await fetch(request)\r\n    // return cache.put(request, response)\r\n    return response.status === 200 \r\n        ? cache.put(request, response) \r\n        : new Promise((resolve, reject) => resolve(':D')); \r\n  }"]}