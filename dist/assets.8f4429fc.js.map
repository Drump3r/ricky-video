{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_intPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","mute","unMute","togglePlay","paused","toggleMute","AutoPlay","AutoPause","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","button","btnUnmute","onclick","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,ACAA,SDASA,ACAAoB,QAAT,GDAA,ACAoB,CDACnB,ACAC,MDAtB,EAA6B;AACzB,OAAKC,KAAL,GAAaD,MAAM,CAACE,EAApB;AACA,ACDJiB,ODCShB,CCDD,CAACE,KDCL,GAAeL,CCDnB,CAAmBa,GAAnB,CDCyB,CAACV,CCDD,MDCN,IAAkB,ACDFG,EDC/B,ICDqB,EAAkB;AEG3C,AFFI,IEEE6B,EFFE,CAAC7B,EEEE,GAAGsB,CFFC,CAACnB,KAAZ,CEEkB,CAAC2B,AFFA,aEET,CAAuB,OAAvB,CAAd;AHDI,AGEJ,AFFQ9B,IEEF+B,AFFE/B,GDACF,GGEG,AFFE,CAACK,EEEAmB,GFFP,EDAJ,CCAmB,EEEA,CAACQ,CFFhB,YEEO,CAAuB,QAAvB,CAAf;AHDC,AGED,AFFK,IEECE,SAAS,GAAGV,QAAQ,CAACQ,aAAT,CAAuB,YAAvB,CAAlB;AAEA,IAAM9B,ADRAc,MCQM,GAAG,IAAIrB,oBAAJ,CAAgB;AHF/BA,AGGIG,ADRA,ADIAI,EEIAJ,AFJAI,EEIE,EAAE6B,EFJE,CAAC5B,EDCA,AGEoB,CHFlBF,CCDT,QDCJ,CAAuBD,CELL,UFKlB,GAAqC,YAAY;AAAA,AGI7CD,ADTc,ADKjB,CALD,CESIA,OAAO,EAAE,CAAC,IAAIgB,iBAAJ,EAAD,EAAiB,IAAIC,kBAAJ,EAAjB;AAFkB,CAAhB,CAAf;AHDI,AELI,MFKEd,GELGe,GFKG,GAAG,ACCJF,GCNP,GAAiB,IAAjB;AFMAZ,AGIR8B,ADTQ,IFKA9B,EGIF,CAACgC,CHJK,CELCjB,CFKC,IGId,GAAiB,UDTT,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFKM,AGIG,ADRT,SCQejB,ADRVkB,IFIO,EGIS,CAACR,EHJN,CAACT,IAAL,EAAN,CGIS,EAAN,GDRT,GAA8B,KAAKiB,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFIM,AGIG,ADPZ,CCOL,IHLmB;AAEXf,IAAAA,KAAK,EAAE;AAAA,AGIf8B,SAAS,CAACC,GHJW,IGIrB,CHJyB,CAAC/B,CGIN,IHJC,EAAN;AAAA,AGIK,KHND,IGMOF,MAAM,CAACY,UAAP,EAAN;AHHZjB,AGGY,CAApB,GHHQA,KAAK,EAAE,AEJX,KFIgBA,KAHD,GEDXK,MAAJ,EAAY;AACR,WAAKA,MAAL,GAAcA,MAAd;AFIA,AGIR,ADPQ,ICOJ,IHJQG,EEHEgB,GFGN,GAAY,EEHE,GAAG,ECOFe,EDPMd,OCO7B,EAAkC,WDPT,CAAyB,KAAKJ,kBAA9B,EAAkD;AFI/D,AGIRkB,ADPQnB,ECORmB,MDPQnB,GCOC,CAACoB,CHJK,IEHE,CFGGxC,CEHD,IFGJ,CAAWQ,AEHFY,CCOxB,CAAwBqB,GHJhB,KGIR,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAiD,UAAAC,KAAK,EAAI;AHHrD,AGIDC,ADTmE,ICSnEA,CHVW,EECM,CAAjB,GCSO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,ADPGtB,GCKJ,GDLIA,QAAQ,CAACE,OAAT,CAAiBrB,MAAM,CAACL,KAAxB;AFGA,AGKP,ADPO2B,MAAAA,EFEInB,KAAJ,CAAUC,AEFF,CAACmB,IFET,EAAiB,UEFjB,CAA0B,kBAA1B,EAA8C,KAAKL,sBAAnD;AFGI,AEFP,WFEYvB,KAAL,CAAWQ,KAAX,GAAmBC,KAAnB;AACH;;AATU,GAAf,QEOA,4BAAoBoB,OAApB,EAA6B;AFI7B,AEHI,OFGC3B,GEHK4B,IFGV,CAAapB,AEHE,GAAGmB,IFGlB,CAAqB,EEHI,CAAC,CAAD,CAArB,KFGiBlB,MAAM,EAAI;AAC3BA,AEHA,IFGAA,MAAM,AEHAoB,CFGCnB,GAAP,CAAWP,IEHI,EFGf,CEHkByB,KAAK,CAACE,iBAAN,IAA2B,KAAKZ,SAAlD;AFIH,GAFD;AAGH,AEJO,CFXR,SEWYW,SAAJ,EAAe;AACX,aAAK1B,MAAL,CAAYC,IAAZ;AFKZR,AEJS,OAFD,IFMG,CAACM,CEJG,QFIf,CAAsBE,IAAtB,GAA6B,YAAW;AACpC,AEJQ,OFIHN,KAAL,CAAWM,AEJED,IFIb,EEJQ,CAAYE,KAAZ;AFKX,AEJQ,CFET;AEDK;AFILT,WAAW,CAACM,SAAZ,CAAsBG,KAAtB,GAA8B,YAAW;AACrC,OAAKP,KAAL,CAAWO,KAAX;AACH,CAFD,UEHI,kCAAyB;AACrB,UAAMwB,SAAS,GAAGJ,QAAQ,CAACM,eAAT,KAA6B,SAA/C;AFKRnC,WAAW,CAACM,SAAZ,CAAsBS,IAAtB,GAA6B,YAAW;AACpC,AELI,OFKCb,GELG+B,EFKR,CAAWvB,KAAX,CELI,EFKe,AELA,IFKnB;AACH,AELW,CFGZ,YEHiBH,MAAL,CAAYC,IAAZ;AACH,OAFD,MAEO;AFKfR,AEJY,WFID,CAACM,CEJKC,MAAL,CAAYE,CFIxB,CAAsBO,GEJV,GFIZ,GAA+B,YAAW;AACtC,AEJK,OFIAd,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACH,AEJI,CFEL;;AAGAV,WAAW,CAACM,SAAZ,CAAsBW,UAAtB,GAAmC,YAAY;AAC3C,MAAI,KAAKf,KAAL,CAAWgB,MAAf,EAAuB;AACnB,SAAKV,IAAL;AACH,GAFD,MAEO;AACH,SAAKC,KAAL,CENOY;AFOV;AACJ,CAND;;AAOArB,WAAW,CAACM,SAAZ,CAAsBa,UAAtB,GAAmC,YAAY;AAC3C,OAAKjB,KAAL,CAAWQ,KAAX,GAAmB,CAAC,KAAKR,KAAL,CAAWQ,KAA/B;AACH,CAFD;;eAIeV","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\r\n    this.media = config.el\r\n    this.plugins = config.plugins || []\r\n    this._intPlugins()\r\n}\r\n\r\nMediaPlayer. prototype._intPlugins = function () {\r\n    const player = {\r\n        play: () => this.play(),\r\n        pause: () => this.pause(),\r\n        media: this.media,\r\n        get muted() {\r\n            return this.media.muted\r\n        },\r\n        set muted(value) {\r\n            this.media.muted = value\r\n        }\r\n    }\r\n    this.plugins.forEach(plugin => {\r\n        plugin.run(player)\r\n    });\r\n}\r\n\r\nMediaPlayer.prototype.play = function() {\r\n    this.media.play()\r\n}\r\nMediaPlayer.prototype.pause = function() {\r\n    this.media.pause()\r\n}\r\nMediaPlayer.prototype.mute = function() {\r\n    this.media.muted = true\r\n}\r\nMediaPlayer.prototype.unMute = function() {\r\n    this.media.muted = false\r\n}\r\nMediaPlayer.prototype.togglePlay = function () {\r\n    if (this.media.paused) {\r\n        this.play()\r\n    } else {\r\n        this.pause()\r\n    }\r\n}\r\nMediaPlayer.prototype.toggleMute = function () {\r\n    this.media.muted = !this.media.muted \r\n}\r\n\r\nexport default MediaPlayer","function AutoPlay() {}\r\nAutoPlay.prototype.run = function (player) {\r\n    if (!player.muted) {\r\n        player.muted = true\r\n    }\r\n    player.play()\r\n}\r\n\r\nexport default AutoPlay","class AutoPause {\r\n    constructor() {\r\n        this.threshold = 0.25\r\n        this.handleIntersection = this.handleIntersection.bind(this)\r\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this)\r\n    }\r\n    run(player) {\r\n        this.player = player\r\n        const observer = new IntersectionObserver(this.handleIntersection, {\r\n            threshold: this.threshold\r\n        })\r\n        observer.observe(player.media)\r\n        document.addEventListener(\"visibilitychange\", this.handleVisibilityChange)\r\n    }\r\n    handleIntersection (entries) {\r\n        const entry = entries[0]\r\n        const isVisible = entry.intersectionRatio >= this.threshold\r\n        if (isVisible) {\r\n            this.player.play()\r\n        } else {\r\n            this.player.pause()\r\n        }   \r\n    }\r\n    handleVisibilityChange() {\r\n        const isVisible = document.visibilityState === 'visible'\r\n        if (isVisible) {\r\n            this.player.play()\r\n        } else {\r\n            this.player.pause()\r\n        }\r\n    }\r\n}\r\n\r\nexport default AutoPause","import MediaPlayer from './MediaPlayer.js'\r\nimport AutoPlay from './plugins/AutoPlay.js'\r\nimport AutoPause from './plugins/AutoPause.js'\r\n\r\nconst video = document.querySelector('video')\r\nconst button = document.querySelector('button')\r\nconst btnUnmute = document.querySelector('.btnUnmute')\r\n\r\nconst player = new MediaPlayer({\r\n    el: video, \r\n    plugins: [new AutoPlay(), new AutoPause()]\r\n})\r\nbutton.onclick = () => player.togglePlay()\r\nbtnUnmute.onclick = () => player.toggleMute()\r\n\r\nif ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register('/sw.js').catch(error => {\r\n        console.log(error.message)\r\n    })\r\n}\r\n"]}